CREATE TABLE STUDENTS(
NAME VARCHAR(10),
DOB DATE,
SADDRESS VARCHAR2(15),
STUID NUMBER(10),
PHONENO NUMBER(10)
);

INSERT INTO STUDENTS VALUES('ARTHUR','30-10-2002','SAINT DANIS',101,8046732856);
INSERT INTO STUDENTS VALUES('DUTCH','12-02-2003','VALENTINE',102,8046732943);
INSERT INTO STUDENTS VALUES('JOHN','20-11-2001','SIBERIA',103,8046732936);
INSERT INTO STUDENTS VALUES('JARVIS','06-02-2003','DELHI',104,3924732856);
INSERT INTO STUDENTS VALUES('ROBERT','10-08-1985','HYDERABAAD',105,8046736736);
INSERT INTO STUDENTS VALUES('SANYA','03-05-2005','RHODES',106,68046732859);
INSERT INTO STUDENTS VALUES('GOBLET','12-05-2006','PARIS',107,8046732784);
INSERT INTO STUDENTS VALUES('ODRISCALL','15-07-2020','SAINT CHRISTNALDO',108,8046732725);
INSERT INTO STUDENTS VALUES('MAGMEN','08-01-1986','GHUMARWIN',109,8046732856);
INSERT INTO STUDENTS VALUES('MARSTON','30-10-2002','BILASPUR',110,8746732856);
INSERT INTO STUDENTS VALUES('SEAN','10-05-2003','LAS VEGAS',111,8046732768);
INSERT INTO STUDENTS VALUES('YOSHIMITSU','03-02-2007','HELL KITCHEN',112,8046738932);

DESCRIBE STUDENTS;
SELECT * FROM STUDENTS;

ALTER TABLE STUDENTS ADD(SRNO NUMBER(2));
ALTER TABLE STUDENTS MODIFY(SRNO NUMBER(3));

ALTER TABLE STUDENTS DROP(SRNO);
ALTER TABLE STUDENTS SET UNUSED COLUMN SRNO;
ALTER TABLE STUDENTS DROP UNUSED COLUMN ;

--PATTERN MATCHING--
SELECT * FROM STUDENTS WHERE SADDRESS LIKE 'S%';
SELECT NAME FROM STUDENTS WHERE NAME LIKE '%T';
SELECT NAME FROM STUDENTS WHERE NAME LIKE 'M%N';
SELECT NAME FROM STUDENTS WHERE NAME LIKE '%T%';
SELECT * FROM STUDENTS WHERE PHONENO LIKE '%46732___';
SELECT * FROM STUDENTS WHERE DOB LIKE '%-10-%';
SELECT * FROM STUDENTS WHERE DOB NOT LIKE '%-10-%';
SELECT * FROM STUDENTS WHERE SADDRESS NOT LIKE '%DE%';
SELECT * FROM STUDENTS WHERE DOB LIKE '%-10-__';

DESCRIBE DUAL;        --THIS IS A DUMMY TABLE
SELECT SYSDATE FROM DUAL;
SELECT * FROM DUAL;
SELECT 2+2 FROM DUAL;

--DATE FUNCTION--
SELECT ADD_MONTHS(SYSDATE,2) FROM DUAL;    --from current date to two months after--
SELECT ADD_MONTHS(SYSDATE,-5) FROM DUAL;   --from current date to 5 months earlier-- 
SELECT ADD_MONTHS(SYSDATE,0) FROM DUAL;    --current date--
SELECT ADD_MONTHS('30-10-2002',7) FROM DUAL;   --after seven months from inserted date--

--Last_day(date) --
SELECT LAST_DAY(SYSDATE) FROM DUAL;        --last date of this month--

--next_day(date,weekday)--
SELECT NEXT_DAY(SYSDATE,'SUNDAY') FROM DUAL;    --show next day from current date--
SELECT NEXT_DAY('11-MAR-2022','MON') FROM DUAL;

--MONTHS_BETWEEN(DATE1,DATE2)--
SELECT MONTHS_BETWEEN('20-AUG-2022','18-JAN-2022') FROM DUAL;

--GREATEST(DATE1,DATE2,DATE3,.....,N)--
SELECT GREATEST('01-JAN-2002','02-FEB-2002','08-AUG-2002') FROM DUAL;   --THERE IS PROBLEM IT COMPARE MONTHS ON THE BASIS OF ASCCI CODE--
SELECT GREATEST(TO_DATE('01-JAN-2002'),TO_DATE('02-FEB-2002'),TO_DATE('08-AUG-2002')) FROM DUAL;     --CONVERT TO THE DATE FORMAT--

--LEAST(DATE1,DATE2,DATE3,........,N)--
SELECT LEAST('01-JAN-2002','02-FEB-2002','08-AUG-2002') FROM DUAL;   --THERE IS PROBLEM IT COMPARE MONTHS ON THE BASIS OF ASCCI CODE--
SELECT LEAST(TO_DATE('01-JAN-2002'),TO_DATE('02-FEB-2002'),TO_DATE('08-AUG-2002')) FROM DUAL;     --CONVERT TO THE DATE FORMAT--

--String Functions--

SELECT ASCII('a') FROM DUAL;

--DUMP--
SELECT DUMP('KANISHQ') FROM DUAL;    --shows length and many other informations about string
SELECT CHR('65') FROM DUAL;
SELECT INSTR()

SELECT LTRIM('Oracle','Or') FROM DUAL;   --trim from left side of string 'case sensitive'
SELECT LTRIM('Oracle','Oaa') FROM DUAL;
SELECT RTRIM('ARTHUR','HUR') FROM STUDENTS;
SELECT RTRIM('ARTHUR','TUR') FROM STUDENTS;  --trim from right side

SELECT TRIM('  HELLO HOW ARE YOU     ') FROM DUAL;     --trim spaces from both side

SELECT REPLACE('HEY WHERE ARE YOU','WHERE','WHO') FROM DUAL;   --REPLACE STRING ,CASE SENSITIVE

SELECT SUBSTR('HELLO MY NAME IS KANISHQ',7) FROM DUAL;
SELECT SUBSTR('ABCDEFGHIJKLMNOP',3,4) FROM DUAL;


--NUMERIC FUNCTIONS--
SELECT ABS(-10) FROM DUAL;
SELECT ABS(10.5) FROM DUAL;
SELECT ABS(-10.6) FROM DUAL;

SELECT CEIL(6.8) FROM DUAL;   --UPPER VALUE--
SELECT CEIL(-6.5) FROM DUAL;  
SELECT FLOOR(5.7) FROM DUAL;
SELECT FLOOR(-5.7) FROM DUAL;   --LOWER VALUE--

SELECT SIGN(-5) FROM DUAL;     --RETURNS -1 IF NEGATIVE AND +1 IF POSITIVE
SELECT SIGN(6) FROM DUAL;

SELECT POWER(7,3) FROM DUAL;
SELECT SQRT(81) FROM DUAL;

SELECT GREATEST(7,5,3,532,23) FROM DUAL;
SELECT LEAST(3,1,3,5,-7,-6,-15,-32) FROM DUAL;
